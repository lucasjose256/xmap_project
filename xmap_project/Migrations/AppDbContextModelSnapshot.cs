// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using xmap_project.Data;

#nullable disable

namespace xmapproject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("xmap_project.Modules.Atividade", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("nomeAtividade")
                        .HasColumnType("text");

                    b.Property<int>("processId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("processId");

                    b.ToTable("atividade");
                });

            modelBuilder.Entity("xmap_project.Modules.MetaDados", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("atividadeId")
                        .HasColumnType("integer");

                    b.Property<string>("ator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("dados")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lgpd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("atividadeId")
                        .IsUnique();

                    b.ToTable("metaDados");
                });

            modelBuilder.Entity("xmap_project.Modules.Process", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("lastEdiTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("urlProcess")
                        .HasColumnType("text");

                    b.Property<string>("userLastEdited")
                        .HasColumnType("text");

                    b.Property<string>("xmlDiagrama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("process");
                });

            modelBuilder.Entity("xmap_project.Modules.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("xmap_project.Modules.Atividade", b =>
                {
                    b.HasOne("xmap_project.Modules.Process", "process")
                        .WithMany("atividades")
                        .HasForeignKey("processId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("process");
                });

            modelBuilder.Entity("xmap_project.Modules.MetaDados", b =>
                {
                    b.HasOne("xmap_project.Modules.Atividade", "atividade")
                        .WithOne("metaDados")
                        .HasForeignKey("xmap_project.Modules.MetaDados", "atividadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("atividade");
                });

            modelBuilder.Entity("xmap_project.Modules.Atividade", b =>
                {
                    b.Navigation("metaDados");
                });

            modelBuilder.Entity("xmap_project.Modules.Process", b =>
                {
                    b.Navigation("atividades");
                });
#pragma warning restore 612, 618
        }
    }
}
